#!/usr/bin/python3
#vim:filetype=py

import sys
from subprocess import run, PIPE
from pathlib import Path


PREV_FILE = '/tmp/e_file'
INPUT_FILE = '/tmp/e_input'


def catch_input():
    try:
        while True:
            yield input()
    except (EOFError, KeyboardInterrupt):
        return


def run_executable(executable, test=None):
    if executable.endswith('.py'):
        command = ['pypy3', executable]
    elif executable.endswith('.cpp'):
        out = '{}.comp'.format(executable.rstrip('.cpp'))
        command = ['run-c++', out, executable]

    if test != None:
        input_ = None
        input_filename = '{}.in'.format(test)
        if Path(input_filename).exists:
            input_ = open(input_filename, 'rb').read()
        output_filename = '{}.out'.format(test)
        if Path(output_filename).exists:
            process = run(command, stdout=PIPE, input=input_)
            run(['/usr/bin/diff', output_filename, '-'], input=process.stdout)
        else:
            run(command, input=input_)
    else:
        run(command)

    with open(PREV_FILE, 'w') as f:
        f.write(str(Path(executable).absolute()))


def main():
    for arg in sys.argv:
        if arg.startswith('-'):
            command.append(arg)
            sys.argv.remove(arg)

    if len(sys.argv) == 1:  # empty (except for exec name)
        try:
            with open(PREV_FILE) as f:
                run_executable(f.readline())
        except FileNotFoundError:
            print('No prev file')
    elif len(sys.argv) == 2:
        run_executable(sys.argv[1])
    elif len(sys.argv) == 3:
        run_executable(sys.argv[1], sys.argv[2])
    else:
        print('Too many arguments')


if __name__ == '__main__':
    main()
